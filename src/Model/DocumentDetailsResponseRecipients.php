<?php
/**
 * DocumentDetailsResponseRecipients
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  PandaDoc\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PandaDoc Public API
 *
 * PandaDoc Public API documentation
 *
 * Generated by: https://openapi-generator.tech
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace PandaDoc\Client\Model;

use \ArrayAccess;
use \PandaDoc\Client\ObjectSerializer;

/**
 * DocumentDetailsResponseRecipients Class Doc Comment
 *
 * @category Class
 * @package  PandaDoc\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class DocumentDetailsResponseRecipients implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'DocumentDetailsResponse_recipients';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'recipientType' => 'string',
        'role' => 'string',
        'roles' => 'string[]',
        'lastName' => 'string',
        'signingOrder' => 'mixed',
        'id' => 'string',
        'contactId' => 'string',
        'firstName' => 'string',
        'email' => 'string',
        'phone' => 'string',
        'deliveryMethods' => '\PandaDoc\Client\Model\RicipientDeliveryMethods',
        'hasCompleted' => 'bool',
        'sharedLink' => 'string',
        'signatureDate' => 'string',
        'verificationSettings' => '\PandaDoc\Client\Model\RecipientVerificationSettings',
        'redirect' => '\PandaDoc\Client\Model\RecipientRedirect'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'recipientType' => null,
        'role' => null,
        'roles' => null,
        'lastName' => null,
        'signingOrder' => null,
        'id' => null,
        'contactId' => null,
        'firstName' => null,
        'email' => null,
        'phone' => null,
        'deliveryMethods' => null,
        'hasCompleted' => null,
        'sharedLink' => null,
        'signatureDate' => null,
        'verificationSettings' => null,
        'redirect' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'recipientType' => 'recipient_type',
        'role' => 'role',
        'roles' => 'roles',
        'lastName' => 'last_name',
        'signingOrder' => 'signing_order',
        'id' => 'id',
        'contactId' => 'contact_id',
        'firstName' => 'first_name',
        'email' => 'email',
        'phone' => 'phone',
        'deliveryMethods' => 'delivery_methods',
        'hasCompleted' => 'has_completed',
        'sharedLink' => 'shared_link',
        'signatureDate' => 'signature_date',
        'verificationSettings' => 'verification_settings',
        'redirect' => 'redirect'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'recipientType' => 'setRecipientType',
        'role' => 'setRole',
        'roles' => 'setRoles',
        'lastName' => 'setLastName',
        'signingOrder' => 'setSigningOrder',
        'id' => 'setId',
        'contactId' => 'setContactId',
        'firstName' => 'setFirstName',
        'email' => 'setEmail',
        'phone' => 'setPhone',
        'deliveryMethods' => 'setDeliveryMethods',
        'hasCompleted' => 'setHasCompleted',
        'sharedLink' => 'setSharedLink',
        'signatureDate' => 'setSignatureDate',
        'verificationSettings' => 'setVerificationSettings',
        'redirect' => 'setRedirect'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'recipientType' => 'getRecipientType',
        'role' => 'getRole',
        'roles' => 'getRoles',
        'lastName' => 'getLastName',
        'signingOrder' => 'getSigningOrder',
        'id' => 'getId',
        'contactId' => 'getContactId',
        'firstName' => 'getFirstName',
        'email' => 'getEmail',
        'phone' => 'getPhone',
        'deliveryMethods' => 'getDeliveryMethods',
        'hasCompleted' => 'getHasCompleted',
        'sharedLink' => 'getSharedLink',
        'signatureDate' => 'getSignatureDate',
        'verificationSettings' => 'getVerificationSettings',
        'redirect' => 'getRedirect'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    #[\ReturnTypeWillChange]
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['recipientType'] = $data['recipientType'] ?? null;
        $this->container['role'] = $data['role'] ?? null;
        $this->container['roles'] = $data['roles'] ?? null;
        $this->container['lastName'] = $data['lastName'] ?? null;
        $this->container['signingOrder'] = $data['signingOrder'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['contactId'] = $data['contactId'] ?? null;
        $this->container['firstName'] = $data['firstName'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['phone'] = $data['phone'] ?? null;
        $this->container['deliveryMethods'] = $data['deliveryMethods'] ?? null;
        $this->container['hasCompleted'] = $data['hasCompleted'] ?? null;
        $this->container['sharedLink'] = $data['sharedLink'] ?? null;
        $this->container['signatureDate'] = $data['signatureDate'] ?? null;
        $this->container['verificationSettings'] = $data['verificationSettings'] ?? null;
        $this->container['redirect'] = $data['redirect'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    #[\ReturnTypeWillChange]
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    #[\ReturnTypeWillChange]
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets recipientType
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getRecipientType()
    {
        return $this->container['recipientType'];
    }

    /**
     * Sets recipientType
     *
     * @param string|null $recipientType recipientType
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setRecipientType($recipientType)
    {
        $this->container['recipientType'] = $recipientType;

        return $this;
    }

    /**
     * Gets role
     *
     * @return string|null
     * @deprecated
     */
    #[\ReturnTypeWillChange]
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param string|null $role role
     *
     * @return self
     * @deprecated
     */
    #[\ReturnTypeWillChange]
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets roles
     *
     * @return string[]|null
     */
    #[\ReturnTypeWillChange]
    public function getRoles()
    {
        return $this->container['roles'];
    }

    /**
     * Sets roles
     *
     * @param string[]|null $roles roles
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setRoles($roles)
    {
        $this->container['roles'] = $roles;

        return $this;
    }

    /**
     * Gets lastName
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getLastName()
    {
        return $this->container['lastName'];
    }

    /**
     * Sets lastName
     *
     * @param string|null $lastName lastName
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setLastName($lastName)
    {
        $this->container['lastName'] = $lastName;

        return $this;
    }

    /**
     * Gets signingOrder
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function getSigningOrder()
    {
        return $this->container['signingOrder'];
    }

    /**
     * Sets signingOrder
     *
     * @param mixed|null $signingOrder signingOrder
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setSigningOrder($signingOrder)
    {
        $this->container['signingOrder'] = $signingOrder;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets contactId
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getContactId()
    {
        return $this->container['contactId'];
    }

    /**
     * Sets contactId
     *
     * @param string|null $contactId contactId
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setContactId($contactId)
    {
        $this->container['contactId'] = $contactId;

        return $this;
    }

    /**
     * Gets firstName
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getFirstName()
    {
        return $this->container['firstName'];
    }

    /**
     * Sets firstName
     *
     * @param string|null $firstName firstName
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setFirstName($firstName)
    {
        $this->container['firstName'] = $firstName;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string|null $phone phone
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets deliveryMethods
     *
     * @return \PandaDoc\Client\Model\RicipientDeliveryMethods|null
     */
    #[\ReturnTypeWillChange]
    public function getDeliveryMethods()
    {
        return $this->container['deliveryMethods'];
    }

    /**
     * Sets deliveryMethods
     *
     * @param \PandaDoc\Client\Model\RicipientDeliveryMethods|null $deliveryMethods deliveryMethods
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setDeliveryMethods($deliveryMethods)
    {
        $this->container['deliveryMethods'] = $deliveryMethods;

        return $this;
    }

    /**
     * Gets hasCompleted
     *
     * @return bool|null
     */
    #[\ReturnTypeWillChange]
    public function getHasCompleted()
    {
        return $this->container['hasCompleted'];
    }

    /**
     * Sets hasCompleted
     *
     * @param bool|null $hasCompleted hasCompleted
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setHasCompleted($hasCompleted)
    {
        $this->container['hasCompleted'] = $hasCompleted;

        return $this;
    }

    /**
     * Gets sharedLink
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getSharedLink()
    {
        return $this->container['sharedLink'];
    }

    /**
     * Sets sharedLink
     *
     * @param string|null $sharedLink sharedLink
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setSharedLink($sharedLink)
    {
        $this->container['sharedLink'] = $sharedLink;

        return $this;
    }

    /**
     * Gets signatureDate
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getSignatureDate()
    {
        return $this->container['signatureDate'];
    }

    /**
     * Sets signatureDate
     *
     * @param string|null $signatureDate signatureDate
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setSignatureDate($signatureDate)
    {
        $this->container['signatureDate'] = $signatureDate;

        return $this;
    }

    /**
     * Gets verificationSettings
     *
     * @return \PandaDoc\Client\Model\RecipientVerificationSettings|null
     */
    #[\ReturnTypeWillChange]
    public function getVerificationSettings()
    {
        return $this->container['verificationSettings'];
    }

    /**
     * Sets verificationSettings
     *
     * @param \PandaDoc\Client\Model\RecipientVerificationSettings|null $verificationSettings verificationSettings
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setVerificationSettings($verificationSettings)
    {
        $this->container['verificationSettings'] = $verificationSettings;

        return $this;
    }

    /**
     * Gets redirect
     *
     * @return \PandaDoc\Client\Model\RecipientRedirect|null
     */
    #[\ReturnTypeWillChange]
    public function getRedirect()
    {
        return $this->container['redirect'];
    }

    /**
     * Sets redirect
     *
     * @param \PandaDoc\Client\Model\RecipientRedirect|null $redirect redirect
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setRedirect($redirect)
    {
        $this->container['redirect'] = $redirect;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    #[\ReturnTypeWillChange]
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    #[\ReturnTypeWillChange]
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


