<?php
/**
 * UpdateIntegrationQuoteSectionItem
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  PandaDoc\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PandaDoc Public API
 *
 * PandaDoc Public API documentation
 *
 * Generated by: https://openapi-generator.tech
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace PandaDoc\Client\Model;

use \ArrayAccess;
use \PandaDoc\Client\ObjectSerializer;

/**
 * UpdateIntegrationQuoteSectionItem Class Doc Comment
 *
 * @category Class
 * @package  PandaDoc\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class UpdateIntegrationQuoteSectionItem implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'UpdateIntegrationQuoteSectionItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'sku' => 'string',
        'name' => 'string',
        'description' => 'string',
        'qty' => 'int',
        'price' => 'float',
        'priceSettings' => '\PandaDoc\Client\Model\QuoteUpdateRequestPriceSettings',
        'cost' => 'float',
        'billingFrequency' => 'string',
        'contractTerm' => 'int',
        'referenceId' => 'string',
        'options' => '\PandaDoc\Client\Model\QuoteUpdateRequestOptions',
        'customColumns' => 'array<string,string>',
        'discounts' => 'array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>',
        'taxes' => 'array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>',
        'fees' => 'array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>',
        'multipliers' => 'array<string,float>'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'sku' => null,
        'name' => null,
        'description' => null,
        'qty' => null,
        'price' => null,
        'priceSettings' => null,
        'cost' => null,
        'billingFrequency' => null,
        'contractTerm' => null,
        'referenceId' => null,
        'options' => null,
        'customColumns' => null,
        'discounts' => null,
        'taxes' => null,
        'fees' => null,
        'multipliers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'sku' => 'sku',
        'name' => 'name',
        'description' => 'description',
        'qty' => 'qty',
        'price' => 'price',
        'priceSettings' => 'price_settings',
        'cost' => 'cost',
        'billingFrequency' => 'billing_frequency',
        'contractTerm' => 'contract_term',
        'referenceId' => 'reference_id',
        'options' => 'options',
        'customColumns' => 'custom_columns',
        'discounts' => 'discounts',
        'taxes' => 'taxes',
        'fees' => 'fees',
        'multipliers' => 'multipliers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'sku' => 'setSku',
        'name' => 'setName',
        'description' => 'setDescription',
        'qty' => 'setQty',
        'price' => 'setPrice',
        'priceSettings' => 'setPriceSettings',
        'cost' => 'setCost',
        'billingFrequency' => 'setBillingFrequency',
        'contractTerm' => 'setContractTerm',
        'referenceId' => 'setReferenceId',
        'options' => 'setOptions',
        'customColumns' => 'setCustomColumns',
        'discounts' => 'setDiscounts',
        'taxes' => 'setTaxes',
        'fees' => 'setFees',
        'multipliers' => 'setMultipliers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'sku' => 'getSku',
        'name' => 'getName',
        'description' => 'getDescription',
        'qty' => 'getQty',
        'price' => 'getPrice',
        'priceSettings' => 'getPriceSettings',
        'cost' => 'getCost',
        'billingFrequency' => 'getBillingFrequency',
        'contractTerm' => 'getContractTerm',
        'referenceId' => 'getReferenceId',
        'options' => 'getOptions',
        'customColumns' => 'getCustomColumns',
        'discounts' => 'getDiscounts',
        'taxes' => 'getTaxes',
        'fees' => 'getFees',
        'multipliers' => 'getMultipliers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    #[\ReturnTypeWillChange]
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    #[\ReturnTypeWillChange]
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const BILLING_FREQUENCY_WEEKLY = 'weekly';
    const BILLING_FREQUENCY_MONTHLY = 'monthly';
    const BILLING_FREQUENCY_ANNUALLY = 'annually';
    const BILLING_FREQUENCY_QUARTERLY = 'quarterly';
    const BILLING_FREQUENCY_SEMIANNUALY = 'semiannualy';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    #[\ReturnTypeWillChange]
    public function getBillingFrequencyAllowableValues()
    {
        return [
            self::BILLING_FREQUENCY_WEEKLY,
            self::BILLING_FREQUENCY_MONTHLY,
            self::BILLING_FREQUENCY_ANNUALLY,
            self::BILLING_FREQUENCY_QUARTERLY,
            self::BILLING_FREQUENCY_SEMIANNUALY,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['sku'] = $data['sku'] ?? '#';
        $this->container['name'] = $data['name'] ?? '';
        $this->container['description'] = $data['description'] ?? '';
        $this->container['qty'] = $data['qty'] ?? 1;
        $this->container['price'] = $data['price'] ?? 0;
        $this->container['priceSettings'] = $data['priceSettings'] ?? null;
        $this->container['cost'] = $data['cost'] ?? null;
        $this->container['billingFrequency'] = $data['billingFrequency'] ?? null;
        $this->container['contractTerm'] = $data['contractTerm'] ?? null;
        $this->container['referenceId'] = $data['referenceId'] ?? null;
        $this->container['options'] = $data['options'] ?? null;
        $this->container['customColumns'] = $data['customColumns'] ?? null;
        $this->container['discounts'] = $data['discounts'] ?? null;
        $this->container['taxes'] = $data['taxes'] ?? null;
        $this->container['fees'] = $data['fees'] ?? null;
        $this->container['multipliers'] = $data['multipliers'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    #[\ReturnTypeWillChange]
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getBillingFrequencyAllowableValues();
        if (!is_null($this->container['billingFrequency']) && !in_array($this->container['billingFrequency'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'billingFrequency', must be one of '%s'",
                $this->container['billingFrequency'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    #[\ReturnTypeWillChange]
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id Item ID to update. Invalid (or missing) ID causes creating a new item.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string|null $sku Product SKU. If you create an item without providing a value, it will have the default value.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Item name. If you create an item without providing a value, it will have the default value.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description Item description. If you create an item without providing a value, it will have the default value.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return int|null
     */
    #[\ReturnTypeWillChange]
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param int|null $qty Item QTY. If you create an item without providing a value, it will have the default value.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets price
     *
     * @return float|null
     */
    #[\ReturnTypeWillChange]
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param float|null $price Item price. If you create an item without providing a value, it will have the default value. If `price_settings` is passed, this value may change after the quote is updated.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceSettings
     *
     * @return \PandaDoc\Client\Model\QuoteUpdateRequestPriceSettings|null
     */
    #[\ReturnTypeWillChange]
    public function getPriceSettings()
    {
        return $this->container['priceSettings'];
    }

    /**
     * Sets priceSettings
     *
     * @param \PandaDoc\Client\Model\QuoteUpdateRequestPriceSettings|null $priceSettings priceSettings
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setPriceSettings($priceSettings)
    {
        $this->container['priceSettings'] = $priceSettings;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return float|null
     */
    #[\ReturnTypeWillChange]
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param float|null $cost Item cost. If you create an item without providing a value, it will have the default value.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets billingFrequency
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getBillingFrequency()
    {
        return $this->container['billingFrequency'];
    }

    /**
     * Sets billingFrequency
     *
     * @param string|null $billingFrequency billingFrequency
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setBillingFrequency($billingFrequency)
    {
        $allowedValues = $this->getBillingFrequencyAllowableValues();
        if (!is_null($billingFrequency) && !in_array($billingFrequency, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'billingFrequency', must be one of '%s'",
                    $billingFrequency,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['billingFrequency'] = $billingFrequency;

        return $this;
    }

    /**
     * Gets contractTerm
     *
     * @return int|null
     */
    #[\ReturnTypeWillChange]
    public function getContractTerm()
    {
        return $this->container['contractTerm'];
    }

    /**
     * Sets contractTerm
     *
     * @param int|null $contractTerm Contract term. Measured in units set in the `billing_frequency` parameter.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setContractTerm($contractTerm)
    {
        $this->container['contractTerm'] = $contractTerm;

        return $this;
    }

    /**
     * Gets referenceId
     *
     * @return string|null
     */
    #[\ReturnTypeWillChange]
    public function getReferenceId()
    {
        return $this->container['referenceId'];
    }

    /**
     * Sets referenceId
     *
     * @param string|null $referenceId Use this field to pass an id that references this item in external systems.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setReferenceId($referenceId)
    {
        $this->container['referenceId'] = $referenceId;

        return $this;
    }

    /**
     * Gets options
     *
     * @return \PandaDoc\Client\Model\QuoteUpdateRequestOptions|null
     */
    #[\ReturnTypeWillChange]
    public function getOptions()
    {
        return $this->container['options'];
    }

    /**
     * Sets options
     *
     * @param \PandaDoc\Client\Model\QuoteUpdateRequestOptions|null $options options
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setOptions($options)
    {
        $this->container['options'] = $options;

        return $this;
    }

    /**
     * Gets customColumns
     *
     * @return array<string,string>|null
     */
    #[\ReturnTypeWillChange]
    public function getCustomColumns()
    {
        return $this->container['customColumns'];
    }

    /**
     * Sets customColumns
     *
     * @param array<string,string>|null $customColumns customColumns
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setCustomColumns($customColumns)
    {
        $this->container['customColumns'] = $customColumns;

        return $this;
    }

    /**
     * Gets discounts
     *
     * @return array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>|null
     */
    #[\ReturnTypeWillChange]
    public function getDiscounts()
    {
        return $this->container['discounts'];
    }

    /**
     * Sets discounts
     *
     * @param array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>|null $discounts Item discounts.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setDiscounts($discounts)
    {
        $this->container['discounts'] = $discounts;

        return $this;
    }

    /**
     * Gets taxes
     *
     * @return array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>|null
     */
    #[\ReturnTypeWillChange]
    public function getTaxes()
    {
        return $this->container['taxes'];
    }

    /**
     * Sets taxes
     *
     * @param array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>|null $taxes Item taxes.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setTaxes($taxes)
    {
        $this->container['taxes'] = $taxes;

        return $this;
    }

    /**
     * Gets fees
     *
     * @return array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>|null
     */
    #[\ReturnTypeWillChange]
    public function getFees()
    {
        return $this->container['fees'];
    }

    /**
     * Sets fees
     *
     * @param array<string,\PandaDoc\Client\Model\QuoteUpdateRequestDiscounts>|null $fees Item fees.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setFees($fees)
    {
        $this->container['fees'] = $fees;

        return $this;
    }

    /**
     * Gets multipliers
     *
     * @return array<string,float>|null
     */
    #[\ReturnTypeWillChange]
    public function getMultipliers()
    {
        return $this->container['multipliers'];
    }

    /**
     * Sets multipliers
     *
     * @param array<string,float>|null $multipliers Item multipliers.
     *
     * @return self
     */
    #[\ReturnTypeWillChange]
    public function setMultipliers($multipliers)
    {
        $this->container['multipliers'] = $multipliers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    #[\ReturnTypeWillChange]
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    #[\ReturnTypeWillChange]
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


